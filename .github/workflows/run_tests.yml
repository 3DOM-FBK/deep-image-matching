name: run-tests

on:
  push:
    branches: "*" # Run on all branches
  pull_request:
    branches: [master, dev]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  run_tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.9"]
    env:
      # macOS specific environment variables to handle potential issues
      PYTORCH_ENABLE_MPS_FALLBACK: 1
      OBJC_DISABLE_INITIALIZE_FORK_SAFETY: YES
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"
      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          uv sync --dev
      - name: Debug environment (macOS)
        if: runner.os == 'macOS'
        run: |
          uv run python -c "import sys; print(f'Python: {sys.version}')"
          uv run python -c "import platform; print(f'Platform: {platform.platform()}')"
          uv run python -c "import torch; print(f'PyTorch: {torch.__version__}')"
      - name: Test with pytest
        env:
          # Force CPU-only mode on macOS to avoid MPS/GPU issues
          CUDA_VISIBLE_DEVICES: ""
          MPS_AVAILABLE: "0"
        run: |
          uv run pytest -v
